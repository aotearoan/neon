import{N as y,a as g}from"./NeonCardHeader-5e3d5e8c.js";import{N as I}from"./NeonDropdownMenu-b0dcd7f8.js";import{b as N,M as W,_ as B}from"../index.js";import{N as D}from"./NeonStack-fb7ab566.js";import{C as M}from"./ComponentDocumentation-6caf88ca.js";import{E as C}from"./Editor-1d4a4353.js";import{u as z,R as m,S as V,D as t,F as T,G as n,A as E,x as S,L as e,H as r,a2 as d}from"./vendor-7a8d752b.js";import"./NeonDropdown-f9c34229.js";import"./NeonPlacementUtils-e254198c.js";import"./NeonBadge-0890751f.js";import"./NeonColorUtils-3abbbd7e.js";import"./NeonScrollUtils-e1749a09.js";import"./NeonLabel-387f69e3.js";import"./NeonNote-2bf2c89c.js";import"./NeonInline-e4d49a2a.js";import"./NeonTabs-5786a26a.js";const L=z({name:"DropdownMenu",components:{NeonCard:y,NeonCardBody:g,NeonDropdownMenu:I,NeonLink:N,NeonStack:D,ComponentDocumentation:M,Editor:C},setup(){const o=m(null),a=m("Display navigation and actions in a dropdown"),p=m([{key:"k1",label:"Clickable option",separatorBefore:!0},{key:"k2",label:"External link",href:"http://getskeleton.com",separatorBefore:!0},{key:"k3",label:"Internal link",href:"/presentation/dropdown",separatorBefore:!0},{key:"k4",label:"Disabled link",href:"/presentation/dropdown",separatorBefore:!0,disabled:!0}]),c=m([{key:"k1",label:"Clickable option",icon:"user",separatorBefore:!0},{key:"k2",label:"External link",href:"http://getskeleton.com",icon:"download",separatorBefore:!0},{key:"k3",label:"Internal link",href:"/presentation/dropdown",icon:"images",separatorBefore:!0},{key:"k4",label:"Disabled link",href:"/presentation/dropdown",icon:"lock",separatorBefore:!0,disabled:!0}]),h=`<neon-dropdown-menu size="s" label="Small menu" :model="model" />
<neon-dropdown-menu size="m" label="Medium menu" :model="model" />
<neon-dropdown-menu size="l" label="Large menu" :model="model" />`,f=`<neon-dropdown-menu color="brand" label="Brand" :model="modelWithIcons" />
<neon-dropdown-menu color="primary" label="Primary" :model="modelWithIcons" />
<neon-dropdown-menu color="info" label="Info" :model="modelWithIcons" />
<neon-dropdown-menu color="success" label="Success" :model="modelWithIcons" />
<neon-dropdown-menu color="warn" label="Warning" :model="modelWithIcons" />
<neon-dropdown-menu color="error" label="Error" :model="modelWithIcons" />`;return V(()=>o.value=W.getComponentConfig("NeonDropdownMenu")),{menuModel:o,headline:a,model:p,modelWithIcons:c,sizeTemplate:h,colorTemplate:f}}}),U=r("p",null,[d(" The "),r("strong",null,"NeonDropdownMenu"),d(" is designed to display a list of clickable options which can either trigger a callback or open a URL. ")],-1),$=r("p",null,[d(" Use "),r("strong",null,"NeonDropdownMenu"),d(" to display options to the user behind a dropdown button. This is useful when there is limited space, or the actions are secondary. ")],-1),v=r("strong",null,"Note:",-1),A=r("h2",{class:"neon-h3"},"Dropdown sizes",-1),P=r("h2",{class:"neon-h3"},"Dropdowns with colors and icons",-1);function R(o,a,p,c,h,f){const k=t("neon-link"),s=t("neon-stack"),i=t("neon-card-body"),l=t("neon-dropdown-menu"),b=t("editor"),w=t("neon-card"),_=t("component-documentation");return o.menuModel?(S(),T(_,{key:0,headline:o.headline,model:o.menuModel},{default:n(()=>[e(w,null,{default:n(()=>[e(i,null,{default:n(()=>[e(s,null,{default:n(()=>[U,$,r("p",null,[v,d(" As well as the options described below, pass through attributes supported by "),e(k,{href:"/presentation/dropdown"},{default:n(()=>[d("NeonDropdown")]),_:1}),d(" to change the style of the dropdown button. ")])]),_:1})]),_:1}),e(i,null,{default:n(()=>[A,e(s,null,{default:n(()=>[e(s,null,{default:n(()=>[e(l,{model:o.model,label:"Small menu",size:"s"},null,8,["model"]),e(l,{model:o.model,label:"Medium menu",size:"m"},null,8,["model"]),e(l,{model:o.model,label:"Large menu",size:"l"},null,8,["model"])]),_:1}),e(b,{modelValue:o.sizeTemplate,"onUpdate:modelValue":a[0]||(a[0]=u=>o.sizeTemplate=u)},null,8,["modelValue"])]),_:1})]),_:1}),e(i,null,{default:n(()=>[P,e(s,null,{default:n(()=>[e(s,null,{default:n(()=>[e(l,{model:o.modelWithIcons,color:"brand",label:"Brand"},null,8,["model"]),e(l,{model:o.modelWithIcons,color:"primary",label:"Primary"},null,8,["model"]),e(l,{model:o.modelWithIcons,color:"info",label:"Info"},null,8,["model"]),e(l,{model:o.modelWithIcons,color:"success",label:"Success"},null,8,["model"]),e(l,{model:o.modelWithIcons,color:"warn",label:"Warning"},null,8,["model"]),e(l,{model:o.modelWithIcons,color:"error",label:"Error"},null,8,["model"])]),_:1}),e(b,{modelValue:o.colorTemplate,"onUpdate:modelValue":a[1]||(a[1]=u=>o.colorTemplate=u)},null,8,["modelValue"])]),_:1})]),_:1})]),_:1})]),_:1},8,["headline","model"])):E("",!0)}const le=B(L,[["render",R]]);export{le as default};
