import{N as r,a as h,b as d,_ as c}from"../index.js";import{N as u,a as g,b as p}from"./NeonCardHeader-5e3d5e8c.js";import{u as m,D as a,y as _,H as e,L as o,a2 as t,G as l,x as b}from"./vendor-7a8d752b.js";const f=m({name:"Home",components:{NeonButton:r,NeonCard:u,NeonCardBody:g,NeonCardHeader:p,NeonIcon:h,NeonLink:d}}),y={class:"homepage"},v={class:"homepage__content"},w=e("h1",null,"What is Neon?",-1),N=e("p",null,"Neon is a super lightweight library of Vue 3 components for building performant Vue applications.",-1),k=e("h1",null,"Why Neon?",-1),S=e("p",null,[t(" Why yet another design system/component library?"),e("br"),t("There are several issues with other component libraries which Neon aims to solve. ")],-1),C={class:"highlights"},x={class:"highlight"},T=e("h2",null,"Semantic HTML components",-1),z=e("p",null," One thing a lot of component libraries do poorly is opt for non-standard div based components rather than use semantic HTML. Neon aims to use semantic HTML everywhere this is possible. This leads to fewer issues, better performance, easier debugging and improved accessibility. ",-1),H={class:"highlight"},L=e("h2",null,"Lightweight",-1),V=e("p",null," Neon has just 2 dependencies - Vue 3 & vue-router. This makes applications developed with Neon fast & easy to maintain. ES6 modules are used to ensure tree shaking and SASS imports can be reduced to only the code used, further reducing the package size. ",-1),E={class:"highlights"},B={class:"highlight"},G=e("h2",null,"Customization",-1),M={class:"highlight"},I=e("h2",null,"Light and dark modes",-1),W=e("p",null," With growing support for light and dark modes in browsers design systems also need to provide this option. Neon provides light and dark modes with support for overrides using CSS variables. ",-1),$={class:"highlights"},j={class:"highlight"},F=e("h2",null,"Icon libraries",-1),A=e("p",null," Icon libraries are tricky. Either you need to include a heavyweight icon font which doesnt allow you to select only the icons you need or you will have to write some code to integrate a font library in javascript which is not very flexible if you need to add a custom icon. Neon's approach is to provide an icon registry and a component for rendering icons. Add your own SVGs as icons and they will be available in all the functional colors in both light and dark modes. ",-1),R={class:"highlight"},D=e("h2",null,"Responsive layout",-1),O=e("p",null,[t(" The 12 column grid (and other variants) are outdated and inflexible. How many times have you had to add classes like "),e("em",null,'class="col-4"'),t(" to your HTML? That's not very semantic at different breakpoints. CSS Grid is here and great at providing flexible layouts but it can be difficult to understand. Neon abstracts this by using a single grid for layout of the main content letting you simply define the grid in code at each responsive breakpoint. ")],-1),q={class:"powered-by neon-color-text-neutral"};function J(K,P,Q,U,X,Y){const s=a("neon-icon"),n=a("neon-button"),i=a("neon-link");return b(),_("div",y,[e("div",v,[o(s,{name:"neon-logo"}),w,N,o(n,{"button-style":"solid",color:"primary",href:"/for-developers/getting-started",label:"Get started",size:"xl"}),k,S,e("div",C,[e("div",x,[o(s,{class:"highlight-icon",name:"html-logo"}),T,z,o(n,{"button-style":"outline",color:"brand",href:"/for-developers/getting-started",label:"Start using Components",size:"l"})]),e("div",H,[o(s,{class:"highlight-icon",name:"feather"}),L,V,o(n,{"button-style":"outline",color:"brand",href:"/for-developers/getting-started",label:"Get started now",size:"l"})])]),e("div",E,[e("div",B,[o(s,{class:"highlight-icon",name:"hammer"}),G,e("p",null,[t(" Neon uses CSS variables extensively to allow for customisation of component styles. It also uses "),o(i,{href:"http://getbem.com/",target:"_blank"},{default:l(()=>[t("BEM")]),_:1}),t(" for CSS class definitions which makes for easy to read production source with better support for recording E2E tests. Further to this, targeting Neon's CSS classes is possible as Neon uses "),o(i,{href:"https://semver.org/",target:"_blank"},{default:l(()=>[t("SEMVER")]),_:1}),t(" , so if a class changes you'll know about it. ")]),o(n,{"button-style":"outline",color:"brand",href:"/for-developers/getting-started#sass",label:"Find out about Customization",size:"l"})]),e("div",M,[o(s,{class:"highlight-icon",name:"contrast"}),I,W,o(n,{"button-style":"outline",color:"brand",href:"/design/theming#dark-mode",label:"Find out more about dark mode",size:"l"})])]),e("div",$,[e("div",j,[o(s,{class:"highlight-icon",name:"images"}),F,A,o(n,{"button-style":"outline",color:"brand",href:"/presentation/icon#description",label:"Learn more about Icons",size:"l"})]),e("div",R,[o(s,{class:"highlight-icon",name:"desktop"}),D,O,o(n,{"button-style":"outline",color:"brand",href:"/layout/grid#description",label:"Show me how to use Grid",size:"l"})])]),e("span",q,[t(" This site was developed using "),o(i,{href:"https://vuejs.org/",target:"_blank"},{default:l(()=>[t("Vue")]),_:1}),t(" and Neon oâ€¿o ")])])])}const te=c(f,[["render",J]]);export{te as default};
