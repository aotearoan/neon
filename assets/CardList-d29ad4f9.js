import{C as I}from"./ComponentDocumentation-6caf88ca.js";import{E as P}from"./Editor-1d4a4353.js";import{g as z,_ as L,N as D,b as j,o as q,l as G,d as H,M as Q}from"../index.js";import{N as O,a as R}from"./NeonCardHeader-5e3d5e8c.js";import{u as M,D as s,x as c,F as w,G as l,L as a,I as g,P as J,y as $,Q as k,A as U,M as F,O as K,a4 as V,a5 as B,R as v,w as C,S as W,H as u,a2 as T}from"./vendor-7a8d752b.js";import{N as E}from"./NeonInline-e4d49a2a.js";import{N as A}from"./NeonStack-fb7ab566.js";import{N as X}from"./NeonNumberUtils-581ff329.js";import"./NeonLabel-387f69e3.js";import"./NeonNote-2bf2c89c.js";import"./NeonTabs-5786a26a.js";const Y=M({name:"NeonCardListCard",components:{NeonCard:O,NeonCardBody:R},emits:["click"],props:{color:{type:String,default:null},disabled:{type:Boolean,default:!1},clickable:{type:Boolean,default:!1}},setup(e,{emit:o}){return{emit:o,NeonFunctionalColor:z}}});function Z(e,o,p,m,r,N){const i=s("neon-card-body"),f=s("neon-card");return c(),w(f,{class:J([[e.color&&`neon-card-list__card--${e.color}`,{"neon-card-list__card--clickable":e.clickable,"neon-card-list__card--disabled":e.disabled}],"neon-card-list__card"]),size:"s",onClick:o[0]||(o[0]=h=>e.clickable&&!e.disabled&&e.emit("click"))},{default:l(()=>[a(i,null,{default:l(()=>[g(e.$slots,"default")]),_:3})]),_:3},8,["class"])}const x=L(Y,[["render",Z]]),ee=M({name:"NeonCardList",components:{NeonButton:D,NeonCardListCard:x,NeonInline:E,NeonLink:j,NeonStack:A},props:{model:{type:Array,required:!0},total:{type:Number,default:null},color:{type:String,default:null},clickable:{type:Boolean,default:!1},ofLabel:{type:String,default:"of"},showMoreLabel:{type:String,default:"Show more"},endOfResultsLabel:{type:String,default:"End of results"}},emits:["show-more","click"],setup(e,{emit:o}){return{emit:o,n:m=>X.formatNumber(m),NeonButtonStyle:q,NeonFunctionalColor:z,NeonSize:G}}}),oe={class:"neon-card-list"},ne={key:0,class:"neon-card-list__total"},le={key:0,class:"neon-card-list__results-end"};function te(e,o,p,m,r,N){const i=s("neon-inline"),f=s("neon-card-list-card"),h=s("neon-link"),d=s("neon-stack"),b=s("neon-button");return c(),$("div",oe,[a(i,{breakpoint:"",class:"neon-card-list__header"},{default:l(()=>[g(e.$slots,"header"),e.total?(c(),$("span",ne,k(e.n(e.model.length))+" "+k(e.ofLabel)+" "+k(e.n(e.total)),1)):U("",!0)]),_:3}),a(d,{class:"neon-card-list__cards"},{default:l(()=>[(c(!0),$(F,null,K(e.model,(n,_)=>(c(),$(F,null,[n.href&&!n.disabled?(c(),w(h,{key:`${n.key||_}-link`,href:n.href,target:n.targetBlank?"_blank":null},{default:l(()=>[a(f,{color:e.color,disabled:n.disabled},{default:l(()=>[g(e.$slots,"card",V(B({cardModel:n,index:_})))]),_:2},1032,["color","disabled"])]),_:2},1032,["href","target"])):(c(),w(f,{key:`${n.key||_}-card`,clickable:e.clickable&&!n.disabled,color:e.color,disabled:n.disabled,onClick:t=>!n.disabled&&e.emit("click",_)},{default:l(()=>[g(e.$slots,"card",V(B({cardModel:n,index:_})))]),_:2},1032,["clickable","color","disabled","onClick"]))],64))),256))]),_:3}),e.model.length===e.total?(c(),$("span",le,k(e.endOfResultsLabel),1)):(c(),w(b,{key:1,"button-style":e.NeonButtonStyle.Text,color:e.NeonFunctionalColor.Neutral,label:e.showMoreLabel,size:e.NeonSize.Small,class:"neon-card-list__show-more",onClick:o[0]||(o[0]=n=>e.emit("show-more",n))},null,8,["button-style","color","label","size"]))])}const ae=L(ee,[["render",te]]),S=(e,o,p=0)=>{const m=[];for(let r=p;r<e+p;r++)m.push({title:`Title ${r+1}`,description:`Description ${r+1}`,href:o,targetBlank:!!o,disabled:r===e+p-1});return m},se=M({name:"CardList",components:{NeonButton:D,NeonCardList:ae,NeonCard:O,NeonCardBody:R,NeonStack:A,NeonInline:E,NeonInput:H,ComponentDocumentation:I,Editor:P},setup(){const e=v(null),o=v("Display a list of cards"),p=`<neon-card-list :model="model" :total="total" color="brand" @show-more="onShowMore">
  <template #header>
    <neon-input v-model="filter" placeholder="Filter results…" size="s" />
  </template>
  <template #card="{ cardModel, index }">
    <neon-stack gap="s">
      <h6>{{ cardModel.title }}</h6>
      <span class="neon-color-text-low-contrast">{{ cardModel.description }}</span>
    </neon-stack>
  </template>
</neon-card-list>`,m=`<neon-card-list :model="linkFilteredModel" :clickable="true" :total="linkTotal" color="brand" @show-more="onLinkShowMore">
  <template #header>
    <neon-input v-model="linkFilter" placeholder="Filter results…" size="s" />
  </template>
  <template #card="{ cardModel, index }">
    <div class="card-contents">
      <span class="card-title">{{ cardModel.title }}</span>
      <span class="card-description">{{ cardModel.description }}</span>
    </div>
  </template>
</neon-card-list>`,r=v(S(5)),N=C(()=>i.value===""?r.value:r.value.filter(y=>(y.title+y.description).indexOf(i.value)>=0)),i=v(""),f=C(()=>i.value===""?10:N.value.length),h=()=>{r.value=[...r.value,...S(5,void 0,5)]},d=v(S(5,"http://getskeleton.com")),b=C(()=>n.value===""?d.value:d.value.filter(y=>(y.title+y.description).indexOf(n.value)>=0)),n=v(""),_=C(()=>n.value===""?10:b.value.length),t=()=>{d.value=[...d.value,...S(5,"http://getskeleton.com",5)]};return W(()=>e.value=Q.getComponentConfig("NeonCardList")),{menuModel:e,headline:o,template:p,filteredModel:N,total:f,filter:i,onShowMore:h,linkModel:d,linkFilteredModel:b,linkFilter:n,linkTotal:_,onLinkShowMore:t,linkTemplate:m}}}),re=u("p",null,[T(" Represent lists of objects as cards. This is intended to be a more responsive replacement for tables. This component will display a list of items as cards with a count (x of y) and a "),u("em",null,"Show more"),T(" button to load more results. There is also a slot for adding filtering or other content above the list. A slot is provided with card model & index parameters for customising how to display the model for each card. ")],-1),ie=u("h2",{class:"neon-h3"},"Basic example",-1),de={class:"card-contents"},ce={class:"card-title"},ue={class:"card-description"},pe=u("h2",{class:"neon-h3"},"Links example",-1),me={class:"card-contents"},fe={class:"card-title"},_e={class:"card-description"};function ke(e,o,p,m,r,N){const i=s("neon-card-body"),f=s("neon-input"),h=s("neon-card-list"),d=s("editor"),b=s("neon-stack"),n=s("neon-card"),_=s("component-documentation");return e.menuModel?(c(),w(_,{key:0,headline:e.headline,model:e.menuModel},{default:l(()=>[a(n,null,{default:l(()=>[a(i,null,{default:l(()=>[re]),_:1}),a(i,null,{default:l(()=>[a(b,null,{default:l(()=>[ie,a(h,{clickable:!0,model:e.filteredModel,total:e.total,color:"brand",onShowMore:e.onShowMore},{header:l(()=>[a(f,{modelValue:e.filter,"onUpdate:modelValue":o[0]||(o[0]=t=>e.filter=t),placeholder:"Filter results…",size:"s"},null,8,["modelValue"])]),card:l(({cardModel:t,index:y})=>[u("div",de,[u("span",ce,k(t.title),1),u("span",ue,k(t.description),1)])]),_:1},8,["model","total","onShowMore"]),a(d,{modelValue:e.template,"onUpdate:modelValue":o[1]||(o[1]=t=>e.template=t)},null,8,["modelValue"])]),_:1})]),_:1}),a(i,null,{default:l(()=>[a(b,null,{default:l(()=>[pe,a(h,{clickable:!0,model:e.linkFilteredModel,total:e.linkTotal,color:"brand",onShowMore:e.onLinkShowMore},{header:l(()=>[a(f,{modelValue:e.linkFilter,"onUpdate:modelValue":o[2]||(o[2]=t=>e.linkFilter=t),placeholder:"Filter results…",size:"s"},null,8,["modelValue"])]),card:l(({cardModel:t,index:y})=>[u("div",me,[u("span",fe,k(t.title),1),u("span",_e,k(t.description),1)])]),_:1},8,["model","total","onShowMore"]),a(d,{modelValue:e.linkTemplate,"onUpdate:modelValue":o[3]||(o[3]=t=>e.linkTemplate=t)},null,8,["modelValue"])]),_:1})]),_:1})]),_:1})]),_:1},8,["headline","model"])):U("",!0)}const Me=L(se,[["render",ke]]);export{Me as default};
