@use 'sass:map';
@use 'responsive';

$spacings: (
        mobile: (
                'neon-spacing-vertical-mobile',
                'neon-spacing-horizontal-mobile',
        ),
        mobile-large: (
                'neon-spacing-vertical-mobile',
                'neon-spacing-horizontal-mobile',
        ),
        tablet: (
                'neon-spacing-vertical-tablet',
                'neon-spacing-horizontal-tablet',
        ),
        larger-than-tablet: (
                'neon-spacing-vertical-desktop',
                'neon-spacing-horizontal-desktop',
        ),
        desktop: (
                'neon-spacing-vertical-desktop',
                'neon-spacing-horizontal-desktop',
        ),
        desktop-large: (
                'neon-spacing-vertical-desktop',
                'neon-spacing-horizontal-desktop',
        ),
);

@mixin spacing-horizontal($paddingOrMargin, $breakpoint, $multiplier) {
  @include responsive.responsive($breakpoint) {
    #{$paddingOrMargin}: calc(#{$multiplier} * var(--#{nth(map.get($spacings, $breakpoint), 2)}));
  }
}

@mixin spacing-vertical($paddingOrMargin, $breakpoint, $multiplier) {
  @include responsive.responsive($breakpoint) {
    #{$paddingOrMargin}: calc(#{$multiplier} * var(--#{nth(map.get($spacings, $breakpoint), 1)}));
  }
}

@mixin spacing-top($paddingOrMargin, $breakpoint) {
  @include responsive.responsive($breakpoint) {
    #{$paddingOrMargin}-top: var(--#{nth(map.get($spacings, $breakpoint), 1)});
  }
}

@mixin spacing($paddingOrMargin, $breakpoint, $multiplier: 1, $square: false) {
  @include responsive.responsive($breakpoint) {
    @if ($square) {
      #{$paddingOrMargin}: calc(#{$multiplier} * var(--#{nth(map.get($spacings, $breakpoint), 1)}));
    } @else {
      #{$paddingOrMargin}: calc(#{$multiplier} * var(--#{nth(map.get($spacings, $breakpoint), 1)})) calc(#{$multiplier} * var(--#{nth(map.get($spacings, $breakpoint), 2)}));
    }
  }
}

@mixin zero-spacing {
  margin: 0;
  padding: 0;
}

// padding mixins
@mixin padding-mobile($multiplier: 1, $square: false) {
  @include spacing('padding', mobile-large, $multiplier, $square);
}

@mixin padding-tablet($multiplier: 1, $square: false) {
  @include spacing('padding', tablet, $multiplier, $square);
}

@mixin padding-desktop($multiplier: 1, $square: false) {
  @include spacing('padding', larger-than-tablet, $multiplier, $square);
}

@mixin padding($multiplier: 1, $square: false) {
  @include padding-desktop($multiplier, $square);
  @include padding-tablet($multiplier, $square);
  @include padding-mobile($multiplier, $square);
}

@mixin padding-horizontal($multiplier-left: 1, $multiplier-right: 1) {
  @include spacing-horizontal('padding-left', larger-than-tablet, $multiplier-left);
  @include spacing-horizontal('padding-left', tablet, $multiplier-left);
  @include spacing-horizontal('padding-left', mobile-large, $multiplier-left);
  @include spacing-horizontal('padding-right', larger-than-tablet, $multiplier-right);
  @include spacing-horizontal('padding-right', tablet, $multiplier-right);
  @include spacing-horizontal('padding-right', mobile-large, $multiplier-right);
}

@mixin padding-vertical($multiplier-top: 1, $multiplier-bottom: 1) {
  @include spacing-vertical('padding-top', larger-than-tablet, $multiplier-top);
  @include spacing-vertical('padding-top', tablet, $multiplier-top);
  @include spacing-vertical('padding-top', mobile-large, $multiplier-top);
  @include spacing-vertical('padding-bottom', larger-than-tablet, $multiplier-bottom);
  @include spacing-vertical('padding-bottom', tablet, $multiplier-bottom);
  @include spacing-vertical('padding-bottom', mobile-large, $multiplier-bottom);
}

// margin mixins
@mixin margin-mobile($multiplier: 1, $square: false) {
  @include spacing('margin', mobile-large, $multiplier, $square);
}

@mixin margin-tablet($multiplier: 1, $square: false) {
  @include spacing('margin', tablet, $multiplier, $square);
}

@mixin margin-desktop($multiplier: 1, $square: false) {
  @include spacing('margin', larger-than-tablet, $multiplier, $square);
}

@mixin margin-vertical($multiplier: 1) {
  @include spacing-vertical('margin-top', larger-than-tablet, $multiplier);
  @include spacing-vertical('margin-top', tablet, $multiplier);
  @include spacing-vertical('margin-top', mobile-large, $multiplier);
  @include spacing-vertical('margin-bottom', larger-than-tablet, $multiplier);
  @include spacing-vertical('margin-bottom', tablet, $multiplier);
  @include spacing-vertical('margin-bottom', mobile-large, $multiplier);
}

@mixin margin-horizontal($multiplier: 1) {
  @include spacing-horizontal('margin-left', larger-than-tablet, $multiplier);
  @include spacing-horizontal('margin-left', tablet, $multiplier);
  @include spacing-horizontal('margin-left', mobile-large, $multiplier);
  @include spacing-horizontal('margin-right', larger-than-tablet, $multiplier);
  @include spacing-horizontal('margin-right', tablet, $multiplier);
  @include spacing-horizontal('margin-right', mobile-large, $multiplier);
}

@mixin margin-top {
  @include spacing-top('margin', larger-than-tablet);
  @include spacing-top('margin', tablet);
  @include spacing-top('margin', mobile-large);
}

@mixin margin($multiplier: 1, $square: false) {
  @include margin-desktop($multiplier, $square);
  @include margin-tablet($multiplier, $square);
  @include margin-mobile($multiplier, $square);
}

// height
@mixin min-height($n, $offset: 0rem) {
  min-height: calc(#{$n} * var(--vh, 1vh) - (#{$offset}));
}

@mixin max-height($n, $offset: 0rem) {
  max-height: calc(#{$n} * var(--vh, 1vh) - (#{$offset}));
}

@mixin height($n, $offset: 0rem) {
  height: calc(#{$n} * var(--vh, 1vh) - (#{$offset}));
}

// width
@mixin width($n, $offset: 0rem) {
  width: calc(#{$n} * var(--vw, 1vw) - (#{$offset}));
}

@mixin side-nav-offset {
  @include responsive.responsive(larger-than-tablet) {
    margin-left: var(--neon-side-nav-width);
    width: calc(100vw - var(--neon-side-nav-width));
  }
}
