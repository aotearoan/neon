@use 'sass:map';
@use 'responsive';

@mixin spacing-horizontal($spacings, $paddingOrMargin, $breakpoint, $multiplier) {
  $breakpoint-spacing: $multiplier * nth(map.get($spacings, $breakpoint), 2);
  @include responsive.responsive($breakpoint) {
    #{$paddingOrMargin}: $breakpoint-spacing;
  }
}

@mixin spacing-vertical($spacings, $paddingOrMargin, $breakpoint, $multiplier) {
  $breakpoint-spacing: $multiplier * nth(map.get($spacings, $breakpoint), 1);
  @include responsive.responsive($breakpoint) {
    #{$paddingOrMargin}: $breakpoint-spacing;
  }
}

@mixin spacing-top($spacings, $paddingOrMargin, $breakpoint) {
  $breakpoint-spacing: nth(map.get($spacings, $breakpoint), 1);
  @include responsive.responsive($breakpoint) {
    #{$paddingOrMargin}-top: $breakpoint-spacing;
  }
}

@mixin spacing($spacings, $paddingOrMargin, $breakpoint, $multiplier: 1, $square: false) {
  $breakpoint-spacing-1: $multiplier *
      nth(map.get($spacings, $breakpoint), 1);
  $breakpoint-spacing-2: $multiplier *
      nth(map.get($spacings, $breakpoint), 2);
  @include responsive.responsive($breakpoint) {
    @if ($square) {
      #{$paddingOrMargin}: $breakpoint-spacing-1;
    } @else {
      #{$paddingOrMargin}: $breakpoint-spacing-1 $breakpoint-spacing-2;
    }
  }
}

@mixin zero-spacing {
  margin: 0;
  padding: 0;
}

// padding mixins
@mixin padding-mobile($spacings, $multiplier: 1, $square: false) {
  @include spacing($spacings, 'padding', mobile-large, $multiplier, $square);
}

@mixin padding-tablet($spacings, $multiplier: 1, $square: false) {
  @include spacing($spacings, 'padding', tablet, $multiplier, $square);
}

@mixin padding-desktop($spacings, $multiplier: 1, $square: false) {
  @include spacing($spacings, 'padding', larger-than-tablet, $multiplier, $square);
}

@mixin padding($spacings, $multiplier: 1, $square: false) {
  @include padding-desktop($spacings, $multiplier, $square);
  @include padding-tablet($spacings, $multiplier, $square);
  @include padding-mobile($spacings, $multiplier, $square);
}

@mixin padding-horizontal($spacings, $multiplier: 1) {
  @include spacing-horizontal($spacings, 'padding-left', larger-than-tablet, $multiplier);
  @include spacing-horizontal($spacings, 'padding-left', tablet, $multiplier);
  @include spacing-horizontal($spacings, 'padding-left', mobile-large, $multiplier);
  @include spacing-horizontal($spacings, 'padding-right', larger-than-tablet, $multiplier);
  @include spacing-horizontal($spacings, 'padding-right', tablet, $multiplier);
  @include spacing-horizontal($spacings, 'padding-right', mobile-large, $multiplier);
}

@mixin padding-vertical($spacings, $multiplier: 1) {
  @include spacing-vertical($spacings, 'padding-top', larger-than-tablet, $multiplier);
  @include spacing-vertical($spacings, 'padding-top', tablet, $multiplier);
  @include spacing-vertical($spacings, 'padding-top', mobile-large, $multiplier);
  @include spacing-vertical($spacings, 'padding-bottom', larger-than-tablet, $multiplier);
  @include spacing-vertical($spacings, 'padding-bottom', tablet, $multiplier);
  @include spacing-vertical($spacings, 'padding-bottom', mobile-large, $multiplier);
}

// margin mixins
@mixin margin-mobile($spacings, $multiplier: 1, $square: false) {
  @include spacing($spacings, 'margin', mobile-large, $multiplier, $square);
}

@mixin margin-tablet($spacings, $multiplier: 1, $square: false) {
  @include spacing($spacings, 'margin', tablet, $multiplier, $square);
}

@mixin margin-desktop($spacings, $multiplier: 1, $square: false) {
  @include spacing($spacings, 'margin', larger-than-tablet, $multiplier, $square);
}

@mixin margin-vertical($spacings, $multiplier: 1) {
  @include spacing-vertical($spacings, 'margin-top', larger-than-tablet, $multiplier);
  @include spacing-vertical($spacings, 'margin-top', tablet, $multiplier);
  @include spacing-vertical($spacings, 'margin-top', mobile-large, $multiplier);
  @include spacing-vertical($spacings, 'margin-bottom', larger-than-tablet, $multiplier);
  @include spacing-vertical($spacings, 'margin-bottom', tablet, $multiplier);
  @include spacing-vertical($spacings, 'margin-bottom', mobile-large, $multiplier);
}

@mixin margin-horizontal($spacings, $multiplier: 1) {
  @include spacing-horizontal($spacings, 'margin-left', larger-than-tablet, $multiplier);
  @include spacing-horizontal($spacings, 'margin-left', tablet, $multiplier);
  @include spacing-horizontal($spacings, 'margin-left', mobile-large, $multiplier);
  @include spacing-horizontal($spacings, 'margin-right', larger-than-tablet, $multiplier);
  @include spacing-horizontal($spacings, 'margin-right', tablet, $multiplier);
  @include spacing-horizontal($spacings, 'margin-right', mobile-large, $multiplier);
}

@mixin margin-top($spacings) {
  @include spacing-top($spacings, 'margin', larger-than-tablet);
  @include spacing-top($spacings, 'margin', tablet);
  @include spacing-top($spacings, 'margin', mobile-large);
}

@mixin margin($spacings, $multiplier: 1, $square: false) {
  @include margin-desktop($spacings, $multiplier, $square);
  @include margin-tablet($spacings, $multiplier, $square);
  @include margin-mobile($spacings, $multiplier, $square);
}

// height
@mixin min-height($n, $offset: 0px) {
  min-height: calc(#{$n} * var(--vh, 1vh) - #{$offset});
}

@mixin max-height($n, $offset: 0px) {
  max-height: calc(#{$n} * var(--vh, 1vh) - #{$offset});
}

@mixin height($n, $offset: 0px) {
  height: calc(#{$n} * var(--vh, 1vh) - #{$offset});
}

// width
@mixin width($n, $offset: 0px) {
  width: calc(#{$n} * var(--vw, 1vw) - #{$offset});
}

@mixin side-nav-offset($neon-side-nav-width) {
  @include responsive.responsive(larger-than-tablet) {
    margin-left: $neon-side-nav-width;
    width: auto;
  }
}
