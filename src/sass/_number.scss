@use './includes/svg';

@mixin number(
  $neon-size-s,
  $neon-size-m,
  $neon-size-l,
  $neon-base-space,
) {
  .neon-number {
    &--with-buttons.neon-number {
      &--s {
        max-width: 4 * $neon-size-s;
      }

      &--m {
        max-width: 4 * $neon-size-m;
      }

      &--l {
        max-width: 4 * $neon-size-l;
      }
    }

    .neon-input .neon-input__textfield {
      padding-right: 2 * $neon-base-space;
      font-variant: tabular-nums;
      border-right: none;
      -moz-appearance: textfield;

      &:focus {
        margin-left: 0;
        margin-right: 0;
      }

      &::-webkit-outer-spin-button,
      &::-webkit-inner-spin-button {
        -webkit-appearance: none;
        margin: 0;
      }
    }

    .neon-input {
      .neon-icon {
        display: none;
      }
    }
  }
}

@mixin number-colors(
  $neon-functional-colors,
  $neon-color-input-selected,
  $neon-theme,
  $neon-background-color-input,
  $neon-neutral-colors,
  $neon-color-text,
  $neon-animation-speed-fast,
  $neon-border-width,
  $neon-border-style,
  $neon-border-color-input,
  $neon-color-disabled-dark,
  $neon-color-disabled-light,
) {
  .neon-number {
    @each $color, $palette in $neon-functional-colors {
      $number-component-color: map-get($palette, $neon-color-input-selected);
      &.neon-number--#{$color}.neon-number--with-buttons:not(.neon-number--disabled) {
        @if ($neon-theme == smooth) {
          .neon-input:not(.neon-input--disabled) .neon-input__textfield {
            background-color: rgba($number-component-color, 0.125);

            &:hover {
              background-color: rgba($number-component-color, 0.25);
            }

            &:focus {
              background-color: $neon-background-color-input;
            }
          }

          .neon-button.neon-number__decrement:not(.neon-button--disabled),
          .neon-button.neon-number__increment:not(.neon-button--disabled) {
            border: none;
            background-color: rgba($number-component-color, 0.125);
            transition: all ease-in-out $neon-animation-speed-fast;

            @if (not index($neon-neutral-colors, $color)) {
              @include svg.color-with-svg($number-component-color);
            } @else {
              @include svg.color-with-svg($neon-color-text);
            }

            &:hover,
            &:focus {
              box-shadow: none;
              background-color: rgba($number-component-color, 0.25);

              @if (not index($neon-neutral-colors, $color)) {
                @include svg.color-with-svg($number-component-color);
              } @else {
                @include svg.color-with-svg($neon-color-text);
              }
            }
          }
        } @else {
          .neon-input__textfield {
            border-color: $number-component-color;

            &:focus {
              border-right: $neon-border-width $neon-border-style $number-component-color;
            }
          }

          .neon-button.neon-number__decrement:not(.neon-button--disabled),
          .neon-button.neon-number__increment:not(.neon-button--disabled) {
            background-color: rgba($number-component-color, 0.0625);

            .neon-svg--fill {
              fill: $neon-color-text;
            }

            &:hover,
            &:focus {
              background-color: rgba($number-component-color, 0.25);
              box-shadow: none;

              .neon-svg--fill {
                fill: $neon-color-text;
              }
            }
          }

          .neon-button.neon-number__decrement.neon-button--disabled,
          .neon-button.neon-number__increment.neon-button--disabled {
            border-color: $number-component-color;
          }
        }
      }

      &--#{$color}:not(.neon-number--with-buttons) {
        .neon-input__textfield {
          border-right: $neon-border-width $neon-border-style $neon-border-color-input;
        }
      }
    }

    .neon-button--disabled {
      &.neon-number__decrement,
      &.neon-number__increment {
        background-color: $neon-color-disabled-dark;

        .neon-svg--fill {
          fill: $neon-color-disabled-light;
        }

        @if ($neon-theme == smooth) {
          border: none;
        }
      }
    }

    &:not(.neon-number--editable) {
      &:not(.neon-number--disabled) .neon-number__input .neon-input__textfield {
        box-shadow: none;

        @if ($neon-theme == smooth) {
          color: $neon-color-disabled-light;
          -webkit-text-fill-color: $neon-color-disabled-light;
          background-color: $neon-color-disabled-dark;
        } @else {
          color: $neon-color-text;
          -webkit-text-fill-color: $neon-color-text;
          background-color: $neon-background-color-input;
        }
      }
    }

    &--disabled {
      .neon-button--disabled {
        &.neon-number__decrement,
        &.neon-number__increment {
          border: $neon-border-width $neon-border-style $neon-color-disabled-dark;
        }
      }

      &:not(.neon-number--with-buttons) .neon-input__textfield {
        border-right: $neon-border-width $neon-border-style $neon-color-disabled-dark;
      }
    }
  }
}