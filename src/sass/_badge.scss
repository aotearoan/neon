@use 'sass:map';

@mixin badge(
  $neon-size-s,
  $neon-size-m,
  $neon-size-l,
  $neon-font-size-s,
  $neon-font-size-m,
  $neon-font-size-l,
  $neon-letter-spacing-m,
  $neon-border-radius,
) {
  $badge-icon-size: 0.667;

  .neon-badge {
    &--s {
      font-size: $neon-font-size-s;

      &,
      .neon-badge__image {
        width: $neon-size-s;
        height: $neon-size-s;
      }

      .neon-icon {
        width: $badge-icon-size * $neon-size-s;
        height: $badge-icon-size * $neon-size-s;
      }
    }

    &--m {
      font-size: $neon-font-size-m;

      &,
      .neon-badge__image {
        width: $neon-size-m;
        height: $neon-size-m;
      }

      .neon-icon {
        width: $badge-icon-size * $neon-size-m;
        height: $badge-icon-size * $neon-size-m;
      }
    }

    &--l {
      font-size: $neon-font-size-l;

      &,
      .neon-badge__image {
        width: $neon-size-l;
        height: $neon-size-l;
      }

      .neon-icon {
        width: $badge-icon-size * $neon-size-l;
        height: $badge-icon-size * $neon-size-l;
      }
    }

    text-transform: uppercase;
    font-weight: 500;
    letter-spacing: $neon-letter-spacing-m;
    display: flex;
    justify-content: center;
    align-items: center;
    user-select: none;

    &__label,
    svg {
      display: flex;
      position: relative;
      top: 0;
    }

    &--square {
      &,
      .neon-badge__image {
        border-radius: $neon-border-radius;
      }
    }

    &--circular {
      &,
      .neon-badge__image {
        border-radius: 50%;
      }
    }
  }
}

@mixin badge-colors(
  $neon-functional-colors,
  $neon-color-label,
  $neon-color-inverse,
  $neon-color-text,
  $neon-background-color-card,
  $neon-background-gradient-angle-badge,
  $neon-color-gradient-alternate,
  $neon-color-disabled-light,
  $neon-color-disabled-dark,
) {
  .neon-badge {
    &--with-icon,
    &--with-label {
      @each $color, $palette in $neon-functional-colors {
        &.neon-badge--#{$color}:not(.neon-badge--disabled) {
          $neon-badge-color: map.get($palette, $neon-color-label);
          @if ($color == high-contrast) {
            color: $neon-color-inverse;
            $neon-badge-color: $neon-color-text;
          } @else {
            color: $neon-background-color-card;
          }

          background: $neon-badge-color;

          @each $alternateColor, $alternatePalette in $neon-functional-colors {
            &.neon-badge--alternate-color-#{$alternateColor} {
              background: linear-gradient(
                              $neon-background-gradient-angle-badge,
                              $neon-badge-color,
                              map.get($alternatePalette, $neon-color-gradient-alternate)
              );
            }
          }
        }
      }
    }

    &--disabled {
      color: $neon-color-disabled-light;
      background: $neon-color-disabled-dark;
      cursor: not-allowed;
    }
  }
}

