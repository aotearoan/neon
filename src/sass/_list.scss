@use './includes/svg';

@mixin import(
  $neon-border-radius,
  $neon-font-size-s,
  $neon-font-size-m,
  $neon-base-space,
  $neon-animation-speed-slow,
) {
  .neon-list {
    &__item {
      cursor: pointer;
      border-radius: $neon-border-radius;
      font-size: $neon-font-size-s;
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-between;
      user-select: none;
      overflow: hidden;
      max-width: 100%;
      width: 100%;
      flex: 1 1 auto;
      outline: none;

      span {
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        width: 100%;
        max-width: 100%;
      }

      .neon-icon {
        width: 4 * $neon-base-space;
        min-width: 4 * $neon-base-space;
        min-height: 4 * $neon-base-space;
        height: 4 * $neon-base-space;
      }

      & + .neon-list__item {
        margin-top: $neon-base-space;
      }
    }

    &--s {
      .neon-list__item {
        padding: 0.25 * $neon-base-space 1.5 * $neon-base-space;
      }
    }

    &--m {
      .neon-list__item {
        padding: 1.25 * $neon-base-space 2 * $neon-base-space;
      }
    }

    &--l {
      .neon-list__item {
        font-size: $neon-font-size-m;
        padding: 1.375 * $neon-base-space 3 * $neon-base-space;
      }
    }

    &--disabled {
      .neon-list__item {
        cursor: not-allowed;
      }
    }
  }

  .neon-transition-list-item-leave-active {
    transform: scale(0);
    opacity: 0;
    transition: all $neon-animation-speed-slow ease-in-out;
  }
}

@mixin import-colors(
  $neon-functional-colors,
  $neon-color-list-item,
  $neon-color-text,
  $neon-color-disabled-dark,
  $neon-color-disabled-light,
) {
  .neon-list {
    @each $color, $palette in $neon-functional-colors {
      &--#{$color} {
        .neon-list__item {
          $list-foreground-color: rgba(map-get($palette, $neon-color-list-item), 0.75);
          background-color: rgba($list-foreground-color, 0.125);
          @if (not($color == 'low-contrast' or $color == 'neutral')) {
            @include svg.color-with-svg($list-foreground-color);
          } @else {
            @include svg.color-with-svg(rgba($neon-color-text, 0.75));
          }

          &:hover,
          &:focus {
            $list-hover-color: map-get($palette, $neon-color-list-item);
            background-color: rgba($list-hover-color, 0.25);
            @if (not($color == 'low-contrast' or $color == 'neutral')) {
              @include svg.color-with-svg($list-hover-color);
            } @else {
              @include svg.color-with-svg($neon-color-text);
            }
          }
        }
      }

      &--disabled {
        .neon-list__item {
          &,
          &:focus,
          &:hover {
            background-color: $neon-color-disabled-dark;
            color: rgba($neon-color-disabled-light, 0.75);
          }
        }
      }
    }
  }
}
