@mixin gradient-button($from-color, $to-color) {
  background: linear-gradient(
    $neon-background-gradient-angle,
    $from-color $neon-background-gradient-offset,
    $to-color 100%
  );
  transition: all ease-in-out $neon-animation-speed-fast;

  &:active:not(:disabled),
  &:hover:not(:disabled) {
    background: linear-gradient(
      $neon-background-gradient-angle,
      $from-color $neon-background-gradient-offset-hover,
      $to-color 100%
    );
  }

  &:focus:not(:disabled):not(.neon-button--no-outline) {
    @include box-shadow-outline($from-color);
  }
}

@mixin solid-button($from-color, $to-color) {
  background: linear-gradient($from-color, $to-color);

  &:hover:not(:disabled) {
    @if ($from-color == #fff or $to-color == #fff) {
      background: linear-gradient(darken($from-color, 10), darken($to-color, 10));
    } @else {
      background: linear-gradient(lighten($from-color, 5), lighten($to-color, 5));
    }
  }

  &:active:not(:disabled) {
    background: darken($to-color, 1);
  }

  &:focus:not(:disabled):not(.neon-button--no-outline) {
    @include box-shadow-outline($to-color);
  }
}

@mixin outline-button($color) {
  border: $neon-border-width-outline-button $neon-border-style $color;
  @include color-with-svg($color);

  &:hover:not(:disabled),
  &:active:not(:disabled) {
    @include color-with-svg($neon-color-inverse);
  }

  &:hover:not(:disabled) {
    background: $color;
  }

  &:active:not(:disabled) {
    background: darken($color, 4);
    border-color: darken($color, 4);
  }

  &:focus:not(:disabled):not(.neon-button--no-outline) {
    @include box-shadow-outline($color);
  }
}

@mixin text-button($color, $neon-background-color-hover, $neon-background-color-active) {
  color: $color;

  &:hover:not(:disabled),
  &:focus:not(:disabled) {
    background: $neon-background-color-hover;
  }

  &:active:not(:disabled) {
    background: $neon-background-color-active;
  }
}

@mixin neon-button-color-import {
  .neon-button {
    @each $color, $palette in $neon-functional-colors {
      &--#{$color} {
        &.neon-button--solid {
          $solid-button-color-1: '' !default;
          $solid-button-color-2: '' !default;
          @if ($color == high-contrast) {
            $solid-button-color-1: $neon-background-high-contrast-solid-button-light;
            $solid-button-color-2: $neon-background-high-contrast-solid-button-dark;
          } @else if ($color == low-contrast) {
            @include color-with-svg($neon-color-low-contrast-solid-button);
            $solid-button-color-1: $neon-background-low-contrast-solid-button-light;
            $solid-button-color-2: $neon-background-low-contrast-solid-button-dark;
          } @else {
            $solid-button-color-1: map-get($palette, $neon-background-solid-button-light);
            $solid-button-color-2: map-get($palette, $neon-background-solid-button-dark);
          }

          @include solid-button($solid-button-color-1, $solid-button-color-2);

          @each $alternateColor, $alternatePalette in $neon-functional-colors {
            &.neon-button--alternate-color-#{$alternateColor}:not(.neon-button--disabled) {
              @if ($alternateColor == high-contrast) {
                $solid-button-color-2: $neon-background-high-contrast-solid-button-light;
              } @else if ($alternateColor == low-contrast) {
                $solid-button-color-2: $neon-background-low-contrast-solid-button-light;
              } @else {
                $solid-button-color-2: map-get($alternatePalette, $neon-color-gradient-alternate);
              }
              @include gradient-button($solid-button-color-1, $solid-button-color-2);
            }
          }
        }

        &.neon-button--outline {
          @if ($color == high-contrast) {
            @include outline-button($neon-color-text);
          } @else if ($color == low-contrast) {
            @include outline-button($neon-color-low-contrast-outline-button);
          } @else {
            @include outline-button(map-get($palette, $neon-background-solid-button-dark));
          }
        }

        &.neon-button--text {
          @include text-button(
            map-get($palette, $neon-color-text-button),
            $neon-background-color-text-button-hover,
            $neon-background-color-text-button-active
          );
        }
      }
    }

    &--solid {
      border: none;
      box-shadow: $neon-box-shadow;
      color: $neon-color-inverse;

      &:active {
        box-shadow: $neon-inset-shadow;
      }

      &.neon-button--disabled {
        color: $neon-color-disabled-light;
        background: $neon-color-disabled-dark;
        box-shadow: none;
      }
    }

    &--outline {
      background: transparent;

      &.neon-button--disabled {
        color: $neon-color-disabled-light;
        border-color: $neon-color-disabled-light;
      }
    }

    &--text {
      background-color: transparent;
      border: none;

      &.neon-button--disabled {
        color: $neon-color-disabled-light;
      }
    }
  }
}
