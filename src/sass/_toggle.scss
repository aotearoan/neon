@use './includes/toggle-mixins';
@use './includes/svg';

@mixin neon-toggle-color(
  $color,
  $toggle-color,
  $neon-color-text,
  $neon-border-width,
  $neon-border-style,
  $neon-border-color-toggle,
  $neon-border-radius,
  $neon-opacity-toggle-chip-hover,
) {
  &:not(.neon-toggle--disabled).neon-toggle--#{$color} {
    color: rgba($neon-color-text, 0.7);

    .neon-toggle__label:not(.neon-toggle__label--disabled) {
      border: $neon-border-width $neon-border-style $neon-border-color-toggle;

      &:first-child {
        border-top-left-radius: $neon-border-radius;
        border-bottom-left-radius: $neon-border-radius;
      }

      &:last-child {
        border-top-right-radius: $neon-border-radius;
        border-bottom-right-radius: $neon-border-radius;
      }

      & + label {
        margin-left: -$neon-border-width;
      }

      &.neon-toggle__label--checked {
        border-color: $toggle-color;
        background-color: rgba($toggle-color, $neon-opacity-toggle-chip-hover);
      }

      &:hover:not(.neon-toggle__label--checked),
      &:focus:not(.neon-toggle__label--checked) {
        background-color: rgba($neon-border-color-toggle, $neon-opacity-toggle-chip-hover);
      }
    }
  }
}

@mixin neon-toggle-color-smooth($color, $toggle-color) {
  &.neon-toggle--#{$color} {
    @include svg.color-with-svg(rgba($toggle-color, 0.5));
    background-color: rgba($toggle-color, 0.05);

    .neon-toggle__label:not(.neon-toggle__label--disabled) {
      &.neon-toggle__label--checked {
        @include svg.color-with-svg($toggle-color);
        background-color: rgba($toggle-color, 0.25);
      }

      &:hover:not(.neon-toggle__label--checked):not(.neon-toggle__label--disabled),
      &:focus:not(.neon-toggle__label--checked) {
        @include svg.color-with-svg(rgba($toggle-color, 0.75));
        background-color: rgba($toggle-color, 0.125);
      }
    }

    &.neon-toggle--disabled .neon-toggle__label,
    .neon-toggle__label--disabled {
      @include svg.color-with-svg(rgba($toggle-color, 0.2));
    }

    &.neon-toggle--disabled .neon-toggle__label--checked,
    .neon-toggle__label--disabled.neon-toggle__label--checked {
      @include svg.color-with-svg(rgba($toggle-color, 0.33));
      background-color: rgba($toggle-color, 0.125);
    }
  }
}

@mixin neon-toggle-color-disabled(
  $neon-border-width,
  $neon-border-style,
  $neon-color-disabled-dark,
  $neon-color-disabled-light,
  $neon-border-color-toggle,
) {
  &.neon-toggle--disabled {
    border: $neon-border-width $neon-border-style $neon-color-disabled-dark;

    .neon-toggle__label {
      color: $neon-color-disabled-light;
      border-color: $neon-color-disabled-dark;
    }
  }

  .neon-toggle__label--disabled {
    color: $neon-color-disabled-light;
    border-top: $neon-border-width $neon-border-style $neon-color-disabled-dark;
    border-bottom: $neon-border-width $neon-border-style $neon-color-disabled-dark;
  }

  .neon-toggle__label:not(.neon-toggle__label--disabled) + .neon-toggle__label--disabled {
    border-left: $neon-border-width $neon-border-style $neon-border-color-toggle;
  }

  .neon-toggle__label--disabled:last-child {
    border-right: $neon-border-width $neon-border-style $neon-border-color-toggle;
  }

  &.neon-toggle--disabled .neon-toggle__label--checked,
  .neon-toggle__label--disabled.neon-toggle__label--checked {
    color: $neon-color-disabled-light;
    border-color: $neon-color-disabled-dark;
    background-color: $neon-color-disabled-dark;
  }
}

@mixin toggle-colors-include(
  $neon-functional-colors,
  $neon-theme,
  $neon-color-text,
  $neon-color-toggle,
  $neon-border-width,
  $neon-border-style,
  $neon-border-color-toggle,
  $neon-border-radius,
  $neon-opacity-toggle-chip-hover,
  $neon-color-disabled-dark,
  $neon-color-disabled-light,
) {
  @each $color, $palette in $neon-functional-colors {
    @if ($neon-theme == smooth) {
      @if ($color == high-contrast) {
        @include neon-toggle-color-smooth($color, $neon-color-text);
      } @else {
        @include neon-toggle-color-smooth($color, map-get($palette, $neon-color-toggle));
      }
    } @else {
      @if ($color == high-contrast) {
        @include neon-toggle-color(
                        $color,
                        $neon-color-text,
                        $neon-color-text,
                        $neon-border-width,
                        $neon-border-style,
                        $neon-border-color-toggle,
                        $neon-border-radius,
                        $neon-opacity-toggle-chip-hover,
        );
      } @else {
        @include neon-toggle-color(
                        $color,
                        map-get($palette, $neon-color-toggle),
                        $neon-color-text,
                        $neon-border-width,
                        $neon-border-style,
                        $neon-border-color-toggle,
                        $neon-border-radius,
                        $neon-opacity-toggle-chip-hover,
        );
      }
    }
  }

  @if ($neon-theme != smooth) {
    @include neon-toggle-color-disabled(
                    $neon-border-width,
                    $neon-border-style,
                    $neon-color-disabled-dark,
                    $neon-color-disabled-light,
                    $neon-border-color-toggle,
    );
  }
}

@mixin toggle(
  $neon-base-space,
  $neon-border-radius,
  $neon-font-size-s,
  $neon-font-size-m,
  $neon-size-s,
  $neon-size-m,
  $neon-size-l,
  $neon-letter-spacing-s,
  $neon-line-height-one,
  $neon-border-radius-radio-button,
) {
  .neon-toggle {
    width: fit-content;
    height: fit-content;

    input {
      display: none;
    }

    &__label {
      user-select: none;
      padding: 2 * $neon-base-space 3 * $neon-base-space;
      display: flex;
      align-items: center;
      justify-content: center;
      white-space: nowrap;

      &:focus {
        outline: none;
      }

      &--disabled {
        cursor: not-allowed;
      }
    }

    &--toggle {
      @include toggle-mixins.toggle-layout(
                      $neon-border-radius,
                      $neon-font-size-s,
                      $neon-font-size-m,
                      $neon-size-s,
                      $neon-size-m,
                      $neon-size-l,
                      $neon-letter-spacing-s,
                      $neon-line-height-one,
      );
    }

    &--radio-buttons {
      @include toggle-mixins.radio-button-layout(
                      $neon-letter-spacing-s,
                      $neon-border-radius-radio-button,
                      $neon-base-space,
                      $neon-font-size-s,
                      $neon-font-size-m,
                      $neon-size-s,
                      $neon-size-m,
                      $neon-size-l,
                      $neon-line-height-one,
      );
    }

    &--horizontal {
      flex-direction: row;
    }

    &--disabled {
      cursor: not-allowed;
    }
  }
}

@mixin toggle-colors(
  $neon-functional-colors,
  $neon-theme,
  $neon-color-text,
  $neon-color-toggle,
  $neon-border-width,
  $neon-border-style,
  $neon-border-color-toggle,
  $neon-border-radius,
  $neon-opacity-toggle-chip-hover,
  $neon-color-disabled-dark,
  $neon-color-disabled-light,
  $neon-border-width-radio-button,
  $neon-background-radio-button,
  $neon-color-radio-button-label,
  $neon-box-shadow,
) {
  .neon-toggle {
    &--toggle {
      @include toggle-colors-include(
                      $neon-functional-colors,
                      $neon-theme,
                      $neon-color-text,
                      $neon-color-toggle,
                      $neon-border-width,
                      $neon-border-style,
                      $neon-border-color-toggle,
                      $neon-border-radius,
                      $neon-opacity-toggle-chip-hover,
                      $neon-color-disabled-dark,
                      $neon-color-disabled-light,
      );
    }

    &--radio-buttons {
      @each $color, $palette in $neon-functional-colors {
        &.neon-toggle--#{$color}:not(.neon-toggle--disabled) {
          $toggle-color: map-get($palette, $neon-color-toggle);

          .neon-toggle__label:not(.neon-toggle__label--disabled) {
            .neon-toggle__radio-button {
              border: $neon-border-width-radio-button $neon-border-style $neon-border-color-toggle;
              background: $neon-background-radio-button;
            }

            color: $neon-color-radio-button-label;

            &:hover,
            &:focus {
              .neon-toggle__radio-button {
                background: rgba($neon-border-color-toggle, 0.375);
              }
            }

            &.neon-toggle__label--checked {
              color: $neon-color-text;

              .neon-toggle__radio-button {
                border: $neon-border-width-radio-button $neon-border-style $toggle-color;

                &-indicator {
                  background-color: $toggle-color;
                  box-shadow: $neon-box-shadow;
                }
              }
            }
          }
        }
      }

      &.neon-toggle--disabled .neon-toggle__label,
      .neon-toggle__label--disabled {
        color: $neon-color-disabled-light;

        .neon-toggle__radio-button {
          background: $neon-color-disabled-dark;
          color: $neon-color-disabled-light;
          border-color: $neon-color-disabled-dark;

          &-indicator {
            background-color: $neon-color-disabled-light;
          }
        }
      }
    }
  }
}