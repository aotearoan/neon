@use 'sass:map';

@mixin import(
  $neon-letter-spacing-s,
  $neon-border-radius,
  $neon-base-space,
  $neon-font-size-s,
) {
  .neon-action-menu {
    .neon-action-menu__link {
      display: flex;
      flex: 1 0 auto;
      letter-spacing: $neon-letter-spacing-s;
      border-radius: $neon-border-radius;
      margin: 0.5 * $neon-base-space -2 * $neon-base-space;
      padding: $neon-base-space 2 * $neon-base-space;
      font-size: $neon-font-size-s;
      font-weight: 400;
      user-select: none;

      &:hover {
        cursor: pointer;
      }

      &:focus {
        outline: none;
      }

      &.neon-action-menu__link--disabled {
        cursor: not-allowed;
      }

      &-count {
        font-variant: tabular-nums;
        font-weight: 600;
      }

      .neon-link__label {
        max-width: none;
        display: flex;
        flex: 1 0 auto;
        justify-content: space-between;
      }
    }
  }
}

@mixin import-colors(
  $neon-color-action-menu-hover,
  $neon-functional-colors,
  $neon-color-action-menu-selected,
  $neon-color-inverse,
  $neon-animation-speed-slow,
  $neon-color-disabled-light,
) {
  &__link {
    &:not(.neon-action-menu__link--selected):not(.neon-action-menu__link--disabled) {
      &:hover,
      &:focus {
        background-color: $neon-color-action-menu-hover;
      }
    }

    &.neon-action-menu__link--selected {
      @each $color, $palette in $neon-functional-colors {
        &.neon-action-menu__link--#{$color} {
          background-color: map.get($palette, $neon-color-action-menu-selected);
        }
      }

      color: $neon-color-inverse;
      transition: background-color ease-in-out $neon-animation-speed-slow,
      color ease-in-out $neon-animation-speed-slow;
    }

    &.neon-action-menu__link--disabled {
      color: $neon-color-disabled-light;
    }
  }
}

