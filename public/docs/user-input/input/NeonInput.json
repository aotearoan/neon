{
  "displayName": "NeonInput",
  "description": "Equivalent of, and wrapper around, an HTML input. Also supports <strong>textarea</strong>.",
  "tags": {},
  "exportName": "default",
  "props": [
    {
      "name": "id",
      "description": "The id the input",
      "type": {
        "name": "string"
      },
      "defaultValue": {
        "func": false,
        "value": "null"
      }
    },
    {
      "name": "modelValue",
      "description": "The value of the input",
      "type": {
        "name": "string"
      },
      "defaultValue": {
        "func": false,
        "value": "null"
      }
    },
    {
      "name": "type",
      "description": "The type of input this is. NOTE: Neon provides custom components as alternatives in the following cases:\n* file (use <a href=\"/user-input/file\">NeonFile</a>)\n* password (use <a href=\"/user-input/password\">NeonPassword</a>)",
      "type": {
        "name": "String as () => NeonInputType"
      },
      "defaultValue": {
        "func": false,
        "value": "NeonInputType.Text"
      }
    },
    {
      "name": "placeholder",
      "description": "Placeholder text to display in the input",
      "type": {
        "name": "string"
      },
      "defaultValue": {
        "func": false,
        "value": "null"
      }
    },
    {
      "name": "size",
      "description": "Size of the input",
      "type": {
        "name": "String as () => NeonSize"
      },
      "defaultValue": {
        "func": false,
        "value": "NeonSize.Medium"
      }
    },
    {
      "name": "color",
      "description": "Color of the input",
      "type": {
        "name": "String as () => NeonFunctionalColor"
      },
      "defaultValue": {
        "func": false,
        "value": "NeonFunctionalColor.LowContrast"
      }
    },
    {
      "name": "state",
      "description": "The state of the input",
      "type": {
        "name": "String as () => NeonState"
      },
      "defaultValue": {
        "func": false,
        "value": "NeonState.Ready"
      }
    },
    {
      "name": "rows",
      "description": "The number of rows to display in the case of a textarea",
      "type": {
        "name": "number"
      },
      "defaultValue": {
        "func": false,
        "value": "null"
      }
    },
    {
      "name": "icon",
      "description": "The name of a clickable icon to display inside the input. This is used for clearing contents or e.g. in the case of\nNeonPassword toggle showing/hiding the password. Defaults to <em>times</em> (for clearing the input's contents).",
      "type": {
        "name": "string"
      },
      "defaultValue": {
        "func": false,
        "value": "null"
      }
    },
    {
      "name": "hideIcon",
      "description": "Hide the icon button, e.g. the X button to clear the input's contents.",
      "type": {
        "name": "boolean"
      },
      "defaultValue": {
        "func": false,
        "value": "false"
      }
    },
    {
      "name": "tabindex",
      "description": "Tabindex to assign to the input.",
      "type": {
        "name": "number"
      },
      "defaultValue": {
        "func": false,
        "value": "0"
      }
    },
    {
      "name": "disabled",
      "description": "The disabled state of the input",
      "type": {
        "name": "boolean"
      },
      "defaultValue": {
        "func": false,
        "value": "false"
      }
    },
    {
      "name": "stateHighlight",
      "description": "When the state is success or error, display the field with the state color indicator, e.g. border or background\ncolor.",
      "type": {
        "name": "boolean"
      },
      "defaultValue": {
        "func": false,
        "value": "true"
      }
    },
    {
      "name": "stateIcon",
      "description": "When the state is success or error, display the state icon.",
      "type": {
        "name": "boolean"
      },
      "defaultValue": {
        "func": false,
        "value": "true"
      }
    },
    {
      "name": "maxlength",
      "description": "The character limit for a textarea.",
      "type": {
        "name": "number"
      },
      "defaultValue": {
        "func": false,
        "value": "null"
      }
    }
  ],
  "events": [
    {
      "name": "focus",
      "description": "Emitted when the input has gained focus",
      "type": {
        "names": [
          "void"
        ]
      }
    },
    {
      "name": "blur",
      "description": "Emitted when the input has lost focus",
      "type": {
        "names": [
          "void"
        ]
      }
    },
    {
      "name": "icon-click",
      "description": "Emitted when the icon is clicked",
      "type": {
        "names": [
          "void"
        ]
      }
    },
    {
      "name": "update:modelValue",
      "description": "Emitted when the input value is changed, NOTE: is not triggered if input is over the textarea length limit",
      "type": {
        "names": [
          "string"
        ]
      }
    }
  ],
  "sourceFiles": [
    "./src/components/user-input/input/NeonInput.vue",
    "/Users/andrew/dev/projects/neon/src/components/user-input/input/NeonInput.ts"
  ]
}